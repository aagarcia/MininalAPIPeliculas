{
	"info": {
		"_postman_id": "dee87ab7-8236-4642-b940-1df45a44bd95",
		"name": "Minimal API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6067448"
	},
	"item": [
		{
			"name": "Generos",
			"item": [
				{
					"name": "ObtenerTodos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN_USER1}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}{{GENEROS}}",
							"host": [
								"{{SERVER}}{{GENEROS}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ObtenerPorId",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}{{GENEROS}}/1",
							"host": [
								"{{SERVER}}{{GENEROS}}"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN_USER1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"KDrama\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}{{GENEROS}}",
							"host": [
								"{{SERVER}}{{GENEROS}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Para Actualizar - Actualizado\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}{{GENEROS}}/7",
							"host": [
								"{{SERVER}}{{GENEROS}}"
							],
							"path": [
								"7"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}{{GENEROS}}/16",
							"host": [
								"{{SERVER}}{{GENEROS}}"
							],
							"path": [
								"16"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Actores",
			"item": [
				{
					"name": "ObtenerTodos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}{{ACTORES}}?pagina=1&recordsPorPagina=50",
							"host": [
								"{{SERVER}}{{ACTORES}}"
							],
							"query": [
								{
									"key": "pagina",
									"value": "1"
								},
								{
									"key": "recordsPorPagina",
									"value": "50"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "nombre",
									"value": "Will Ferrell",
									"type": "text"
								},
								{
									"key": "fechaNacimiento",
									"value": "1967-07-16",
									"type": "text"
								},
								{
									"key": "foto",
									"type": "file",
									"src": "/C:/Users/alex/Documents/net_cursos/curso2/actores/WillFerrell.jpg"
								}
							]
						},
						"url": {
							"raw": "{{SERVER}}{{ACTORES}}",
							"host": [
								"{{SERVER}}{{ACTORES}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ObtenerPorId",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}{{ACTORES}}/3",
							"host": [
								"{{SERVER}}{{ACTORES}}"
							],
							"path": [
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "ObtenerPorNombre",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}{{ACTORES}}/obtenerPorNombre/l",
							"host": [
								"{{SERVER}}{{ACTORES}}"
							],
							"path": [
								"obtenerPorNombre",
								"l"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "nombre",
									"value": "Samuel L. Jackson",
									"type": "text"
								},
								{
									"key": "fechaNacimiento",
									"value": "1948-12-21",
									"type": "text"
								},
								{
									"key": "foto",
									"type": "file",
									"src": "/C:/Users/alex/Documents/net_cursos/curso2/actores/SamuelLJackson.jpg"
								}
							]
						},
						"url": {
							"raw": "{{SERVER}}{{ACTORES}}/1",
							"host": [
								"{{SERVER}}{{ACTORES}}"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}{{ACTORES}}/5",
							"host": [
								"{{SERVER}}{{ACTORES}}"
							],
							"path": [
								"5"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Peliculas",
			"item": [
				{
					"name": "Crear",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "titulo",
									"value": "Zoolander 2",
									"type": "text"
								},
								{
									"key": "enCines",
									"value": "False",
									"type": "text"
								},
								{
									"key": "fechaLanzamiento",
									"value": "2016-02-12",
									"type": "text"
								},
								{
									"key": "poster",
									"type": "file",
									"src": "/C:/Users/alex/Documents/net_cursos/curso2/peliculas/zoolander2.jpg"
								}
							]
						},
						"url": {
							"raw": "{{SERVER}}{{PELICULAS}}",
							"host": [
								"{{SERVER}}{{PELICULAS}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ObtenerTodos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}{{PELICULAS}}?pagina=1&recordsPorPagina=10",
							"host": [
								"{{SERVER}}{{PELICULAS}}"
							],
							"query": [
								{
									"key": "pagina",
									"value": "1"
								},
								{
									"key": "recordsPorPagina",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ObtenerPorId",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}{{PELICULAS}}/1",
							"host": [
								"{{SERVER}}{{PELICULAS}}"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "titulo",
									"value": "Bad Boys 1",
									"type": "text"
								},
								{
									"key": "enCines",
									"value": "True",
									"type": "text"
								},
								{
									"key": "fechaLanzamiento",
									"value": "1995-04-07",
									"type": "text"
								},
								{
									"key": "poster",
									"type": "file",
									"src": [],
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{SERVER}}{{PELICULAS}}/4",
							"host": [
								"{{SERVER}}{{PELICULAS}}"
							],
							"path": [
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}{{PELICULAS}}/7",
							"host": [
								"{{SERVER}}{{PELICULAS}}"
							],
							"path": [
								"7"
							]
						}
					},
					"response": []
				},
				{
					"name": "AsignarGeneros",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    20\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}{{PELICULAS}}/8/asignargeneros",
							"host": [
								"{{SERVER}}{{PELICULAS}}"
							],
							"path": [
								"8",
								"asignargeneros"
							]
						}
					},
					"response": []
				},
				{
					"name": "AsignarActores",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"actorId\": 7,\r\n    \"personaje\": \"Jacobim Mugatu\"\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}{{PELICULAS}}/8/asignaractores",
							"host": [
								"{{SERVER}}{{PELICULAS}}"
							],
							"path": [
								"8",
								"asignaractores"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Comentarios",
			"item": [
				{
					"name": "Crear",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN_USER1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cuerpo\": \"Scarlet excelente actriz\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}{{PELICULA}}/1/{{COMENTARIOS}}",
							"host": [
								"{{SERVER}}{{PELICULA}}"
							],
							"path": [
								"1",
								"{{COMENTARIOS}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ObtenerTodos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}{{PELICULA}}/1/{{COMENTARIOS}}",
							"host": [
								"{{SERVER}}{{PELICULA}}"
							],
							"path": [
								"1",
								"{{COMENTARIOS}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ObtenerPorId",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}{{PELICULA}}/{{COMENTARIOS}}/4",
							"host": [
								"{{SERVER}}{{PELICULA}}"
							],
							"path": [
								"{{COMENTARIOS}}",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN_USER1}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cuerpo\": \"Mas que interesante, tambien estuvo triste\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}{{PELICULA}}/1/{{COMENTARIOS}}/1",
							"host": [
								"{{SERVER}}{{PELICULA}}"
							],
							"path": [
								"1",
								"{{COMENTARIOS}}",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN_USER2}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}{{PELICULA}}/1/{{COMENTARIOS}}/1",
							"host": [
								"{{SERVER}}{{PELICULA}}"
							],
							"path": [
								"1",
								"{{COMENTARIOS}}",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Usuarios",
			"item": [
				{
					"name": "Registrar",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"tita@hotmail.com\",\r\n  \"password\": \"aA123456!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}{{USUARIOS}}/registrar",
							"host": [
								"{{SERVER}}{{USUARIOS}}"
							],
							"path": [
								"registrar"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Verificar que el estado de la respuesta es 200\r",
									"pm.test(\"La respuesta es 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    // Obtener el cuerpo de la respuesta como JSON\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    // Imprimir el cuerpo de la respuesta en la consola de Postman para ver su estructura (opcional)\r",
									"    //console.log(jsonData);\r",
									"\r",
									"    // Verificar la existencia de una clave específica en el JSON y extraer su valor\r",
									"    pm.test(\"Verificar y extraer valor de 'token'\", function () {\r",
									"        pm.expect(jsonData).to.have.property('token');\r",
									"        var valorToken = jsonData.token;\r",
									"\r",
									"        // Obtener el cuerpo de la solicitud \r",
									"        var requestData = pm.request.body.raw; \r",
									"        var requestDataJson = JSON.parse(requestData);\r",
									"\r",
									"        // Verificar el valor del campo 'email' \r",
									"        if (requestDataJson.email === 'alex@hotmail.com') { \r",
									"            pm.environment.set(\"TOKEN_USER1\", valorToken); \r",
									"            //console.log(\"Valor de 'token' asignado a la variable de ambiente TOKEN_USER1: \", valorToken); \r",
									"        } else if (requestDataJson.email === 'tita@hotmail.com') { \r",
									"            pm.environment.set(\"TOKEN_USER2\", valorToken); \r",
									"            //console.log(\"Valor de 'token' asignado a la variable de ambiente TOKEN_USER2: \", valorToken); \r",
									"        } else { \r",
									"            console.log(\"El valor del campo 'email' no coincide con los valores esperados.\");\r",
									"        }\r",
									"    });\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"alex@hotmail.com\",\r\n  \"password\": \"aA123456!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}{{USUARIOS}}/login",
							"host": [
								"{{SERVER}}{{USUARIOS}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "HacerAdmin",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN_USER1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"alex@hotmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}{{USUARIOS}}/haceradmin",
							"host": [
								"{{SERVER}}{{USUARIOS}}"
							],
							"path": [
								"haceradmin"
							]
						}
					},
					"response": []
				},
				{
					"name": "RemoverAdmin",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN_USER1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"alex@hotmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SERVER}}{{USUARIOS}}/removeradmin",
							"host": [
								"{{SERVER}}{{USUARIOS}}"
							],
							"path": [
								"removeradmin"
							]
						}
					},
					"response": []
				},
				{
					"name": "RenovarToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Verificar que el estado de la respuesta es 200\r",
									"pm.test(\"La respuesta es 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    // Obtener el cuerpo de la respuesta como JSON\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    // Imprimir el cuerpo de la respuesta en la consola de Postman para ver su estructura (opcional)\r",
									"    //console.log(jsonData);\r",
									"\r",
									"    // Verificar la existencia de una clave específica en el JSON y extraer el valor del token \r",
									"    pm.expect(jsonData).to.have.property('token'); \r",
									"    var token = jsonData.token; \r",
									"    \r",
									"    // Decodificar el JWT y obtener el payload \r",
									"    const atob = require('atob'); \r",
									"    var base64Url = token.split('.')[1]; \r",
									"    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/'); \r",
									"    var payload = JSON.parse(atob(base64)); \r",
									"    \r",
									"    // Obtener el valor de 'email' del payload \r",
									"    var email = payload.email;\r",
									"\r",
									"    // Verificar el valor del campo 'email' \r",
									"    if (email === 'alex@hotmail.com') { \r",
									"        pm.environment.set(\"TOKEN_USER1\", token); \r",
									"        //console.log(\"Valor de 'token' asignado a la variable de ambiente TOKEN_USER1: \", token); \r",
									"    } else if (email === 'tita@hotmail.com') { \r",
									"        pm.environment.set(\"TOKEN_USER2\", token); \r",
									"        //console.log(\"Valor de 'token' asignado a la variable de ambiente TOKEN_USER2: \", token); \r",
									"    } else { \r",
									"        console.log(\"El valor del campo 'email' no coincide con los valores esperados.\");\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN_USER1}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}{{USUARIOS}}/renovartoken",
							"host": [
								"{{SERVER}}{{USUARIOS}}"
							],
							"path": [
								"renovartoken"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}